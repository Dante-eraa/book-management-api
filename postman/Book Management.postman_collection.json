{
	"info": {
		"_postman_id": "d0052a24-78c6-4c6b-984c-492c95f9072f",
		"name": "Book Management",
		"description": "# **Book Management API Documentation**\n\n**Base URL:** `http://localhost:3000/books`\n\n## **1\\. Get All Books**\n\n### **Request**\n\n- **Method:** `GET`\n    \n- **Endpoint:** `/`\n    \n- **Headers:** `Content-Type: application/json`\n    \n\n### **Response (Success - 200 OK)**\n\njsonCopyDownload\n\n```\n[\n  {\n    \"id\": \"a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8\",\n    \"title\": \"Clean Code\",\n    \"author\": \"Robert C. Martin\",\n    \"publishedYear\": 2008\n  }\n]\n\n ```\n\n## **2\\. Get Single Book**\n\n### **Request**\n\n- **Method:** `GET`\n    \n- **Endpoint:** `/:id` (UUID)\n    \n- **Example:** `/a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8`\n    \n\n### **Responses**\n\n**Success (200 OK):**\n\njsonCopyDownload\n\n```\n{\n  \"id\": \"a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8\",\n  \"title\": \"Clean Code\",\n  \"author\": \"Robert C. Martin\",\n  \"publishedYear\": 2008\n}\n\n ```\n\n**Error (404 Not Found):**\n\njsonCopyDownload\n\n```\n{\n  \"error\": \"Book not found\"\n}\n\n ```\n\n## **3\\. Create Book**\n\n### **Request**\n\n- **Method:** `POST`\n    \n- **Endpoint:** `/`\n    \n- **Headers:** `Content-Type: application/json`\n    \n- **Body:**\n    \n\njsonCopyDownload\n\n```\n{\n  \"title\": \"New Book\",\n  \"author\": \"Author Name\",\n  \"publishedYear\": 2023\n}\n\n ```\n\n### **Responses**\n\n**Success (201 Created):**\n\njsonCopyDownload\n\n```\n{\n  \"id\": \"b2c3d4e5-f6g7-8901-h2i3-j4k5l6m7n8o9\",\n  \"title\": \"New Book\",\n  \"author\": \"Author Name\",\n  \"publishedYear\": 2023\n}\n\n ```\n\n**Error (400 Bad Request):**\n\njsonCopyDownload\n\n```\n{\n  \"error\": \"Missing required fields: title, author, publishedYear\"\n}\n\n ```\n\n## **4\\. Update Book**\n\n### **Request**\n\n- **Method:** `PUT`\n    \n- **Endpoint:** `/:id` (UUID)\n    \n- **Headers:** `Content-Type: application/json`\n    \n- **Body:**\n    \n\njsonCopyDownload\n\n```\n{\n  \"title\": \"Updated Title\",\n  \"author\": \"Updated Author\",\n  \"publishedYear\": 2024\n}\n\n ```\n\n### **Responses**\n\n**Success (200 OK):**\n\njsonCopyDownload\n\n```\n{\n  \"id\": \"a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8\",\n  \"title\": \"Updated Title\",\n  \"author\": \"Updated Author\",\n  \"publishedYear\": 2024\n}\n\n ```\n\n**Error (404 Not Found):**\n\njsonCopyDownload\n\n```\n{\n  \"error\": \"Book not found\"\n}\n\n ```\n\n## **5\\. Delete Book**\n\n### **Request**\n\n- **Method:** `DELETE`\n    \n- **Endpoint:** `/:id` (UUID)\n    \n\n### **Responses**\n\n**Success (204 No Content)**  \n_(Empty response body)_\n\n**Error (404 Not Found):**\n\njsonCopyDownload\n\n```\n{\n  \"error\": \"Book not found\"\n}\n\n ```\n\n## **6\\. Import Books (CSV)**\n\n### **Request**\n\n- **Method:** `POST`\n    \n- **Endpoint:** `/import`\n    \n- **Headers:** `Content-Type: multipart/form-data`\n    \n- **Body:**  \n    Key: `file` (File upload with CSV format)\n    \n\n**Example CSV Format:**\n\nCopyDownload\n\n```\ntitle,author,publishedYear\nNew Book 1,Author 1,2023\nNew Book 2,Author 2,2024\n\n ```\n\n### **Responses**\n\n**Success (200 OK):**\n\njsonCopyDownload\n\n```\n{\n  \"added\": 2,\n  \"errors\": []\n}\n\n ```\n\n**Error (400 Bad Request):**\n\njsonCopyDownload\n\n```\n{\n  \"error\": \"No file uploaded or invalid CSV format\"\n}\n\n ```\n\n---\n\n### **Notes:**\n\n1. All IDs are **UUID v4** strings (e.g., `a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8`)\n    \n2. For CSV import, ensure the file has headers: `title,author,publishedYear`\n    \n3. `publishedYear` must be a valid integer\n    \n\nEndFragment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38658634"
	},
	"item": [
		{
			"name": "Get all books",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/E:/book.csv"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get book by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/books/92705e32-8995-475a-95ac-2f4e43cb34c3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						"92705e32-8995-475a-95ac-2f4e43cb34c3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add a book",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Atomic Habits\",\r\n  \"author\": \"James Clear\",\r\n  \"publishedYear\": 2018\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a book",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"Dante\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/books/92705e32-8995-475a-95ac-2f4e43cb34c3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						"92705e32-8995-475a-95ac-2f4e43cb34c3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a book",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/books/92705e32-8995-475a-95ac-2f4e43cb34c3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						"92705e32-8995-475a-95ac-2f4e43cb34c3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Import books from csv",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/E:/book.csv"
						}
					]
				},
				"url": {
					"raw": "http://localhost:3000/books/import",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"books",
						"import"
					]
				}
			},
			"response": []
		}
	]
}